var config = {
...     type: Phaser.AUTO,
...     width: 800,
...     height: 600,
...     physics: {
...         default: 'arcade',
...         arcade: {
...             gravity: { y: 0 },
...             debug: false
...         }
...     },
...     scene: {
...         preload: preload,
...         create: create,
...         update: update
...     }
... };
Uncaught ReferenceError: Phaser is not defined
>
> var player;
undefined
> var enemy;
undefined
> var bullets;
undefined
> var score = 0;
undefined
> var scoreText;
undefined
>
> var game = new Phaser.Game(config);
Uncaught ReferenceError: Phaser is not defined
>
> function preload() {
...     this.load.image('player', 'player.png');
...     this.load.image('enemy', 'enemy.png');
...     this.load.image('bullet', 'bullet.png');
... }
undefined
>
> function create() {
...     player = this.physics.add.sprite(400, 550, 'player');
...     player.setCollideWorldBounds(true);
...
...     enemy = this.physics.add.sprite(Phaser.Math.Between(50, 750), 10, 'enemy');
...
...     bullets = this.physics.add.group({
...         defaultKey: 'bullet',
...         maxSize: 10
...     });
...
...     this.physics.add.collider(bullets, enemy, hitEnemy, null, this);
...
...     scoreText = this.add.text(16, 16, 'Score: 0', { fontSize: '32px', fill: '#fff' });
...
...     this.physics.add.collider(player, enemy, gameOver, null, this);
...
...     cursors = this.input.keyboard.createCursorKeys();
... }
undefined
>
> function update() {
...     player.setVelocity(0);
...
...     if (cursors.left.isDown && player.x > 0) {
...         player.setVelocityX(-200);
...     }
...     else if (cursors.right.isDown && player.x < 750) {
...         player.setVelocityX(200);
...     }
...
...     if (cursors.space.isDown) {
...         shootBullet();
...     }
...
...     if (enemy.y > 600) {
...         enemy.y = 10;
...         enemy.x = Phaser.Math.Between(50, 750);
...     }
... }
undefined
>
> function shootBullet() {
...     var bullet = bullets.get(player.x, player.y - 10);
...
...     if (bullet) {
...         bullet.setActive(true);
...         bullet.setVisible(true);
...         bullet.setVelocityY(-400);
...     }
... }
undefined
>
> function hitEnemy(bullet, enemy) {
...     bullet.setActive(false).setVisible(false);
...     enemy.y = 10;
...     enemy.x = Phaser.Math.Between(50, 750);
...     score += 10;
...     scoreText.setText('Score: ' + score);
... }
undefined
>
> function gameOver() {
...     this.physics.pause();
...     scoreText.setText('Game Over. Score: ' + score);
>
>
> http-server































